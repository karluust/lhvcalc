describe('NÃ¤idiskuumakse tests', () => {

    beforeEach(() => {
        cy.visit('https://www.lhv.ee/et/liising#kalkulaator')
        // Accept cookies
        cy.get('[id="acceptPirukas"]')
            .click();
    })

    const calculator = (carPrice, initialPercentage, interestRate, reminderPercentage, totalPayment) => {
        // Sum calculations from percentage
        const initialSum = initialPercentage == 0 ? 0 : +((carPrice / 100) * initialPercentage).toFixed(2)
        const reminderSum =  reminderPercentage == 0 ? 0 : +((carPrice / 100) * reminderPercentage).toFixed(2)

        cy.get('[id="account_type-0"]')
            .should('exist')
            .and('be.checked')
        cy.get('[id="account_type-1"]')
            .should('exist')
            .and('not.be.checked')
        cy.get('[id="kap_rent"]')
            .should('exist')
            .and('be.checked')
        cy.get('[id="kas_rent"]')
            .should('exist')
            .and('not.be.checked')
        cy.get('input[id="price"]')
            .should('exist')
            .clear()
            .type(carPrice)
            .should('have.value', carPrice)
        cy.get('[id="initial_percentage"]')
            .should('exist')
            .clear()
            .type(initialPercentage)
            .should('have.value', initialPercentage)
        cy.get('[id="initial"]')
            .should('exist')
            .and('have.value', initialSum)
        cy.get('select[name="years"]')
            .should('exist')
            .select('5')
            .should('have.value', '60')
        cy.get('select[name="months"]')
            .should('exist')
            .select('5')
            .should('have.value', '5')
        cy.get('[id="interest_rate"]')
            .should('exist')
            .clear()
            .type(interestRate)
            .should('have.value', interestRate)
        cy.get('[id="reminder_percentage"]')
            .should('exist')
            .clear()
            .type(reminderPercentage)
            .should('have.value', reminderPercentage)
        cy.get('[id="reminder"]')
            .should('exist')
            .and('have.value', reminderSum)
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include(totalPayment)
            })
        cy.contains('Taotle liisingut')
            .should('exist')
            .and('have.attr', 'href', '/et/liising/taotlus')
            .click()
        cy.url().should('eq', 'https://www.lhv.ee/et/liising/taotlus')
    }

    it('Returns sum when given vehicle price, lease period and intress', () => {
        calculator(25000, 0, 4, 0, 428.42)
    })

    it('Returns sum when given vehicle price, initial payment, lease period and intress', () => {
        calculator(25000, 10, 4, 0, 385.58)
    })

    it('Returns sum when given vehicle price, lease period, intress and reminder', () => {
        calculator(25000, 0, 4, 20, 359.40)
    })

    it('Returns sum when given vehicle price, initial payment, lease period, intress and reminder', () => {
        calculator(25000, 10, 4, 20, 316.56)
    })

    it('Return sum for different combinations of eraisik, juriidiline isik, kasutusrent, kapitalirent', () => {
        cy.get('[id="account_type-0"]')
            .should('exist')
            .and('be.checked')
        cy.get('[id="account_type-1"]')
            .should('exist')
            .and('not.be.checked')
        cy.get('[id="kap_rent"]')
            .should('exist')
            .and('be.checked')
        cy.get('[id="kas_rent"]')
            .should('exist')
            .and('not.be.checked')
        cy.get('input[id="price"]')
            .should('exist')
            .clear()
            .type('25000')
            .should('have.value', '25000')
        cy.get('[id="initial_percentage"]')
            .should('exist')
            .clear()
            .type('10')
            .should('have.value', '10')
        cy.get('[id="initial"]')
            .should('exist')
            .and('have.value', '2500')
        cy.get('select[name="years"]')
            .should('exist')
            .select('5')
            .should('have.value', '60')
        cy.get('select[name="months"]')
            .should('exist')
            .select('5')
            .should('have.value', '5')
        cy.get('[id="interest_rate"]')
            .should('exist')
            .clear()
            .type('4')
            .should('have.value', '4')
        cy.get('[id="reminder_percentage"]')
            .should('exist')
            .clear()
            .type('20')
            .should('have.value', '20')
        cy.get('[id="reminder"]')
            .should('exist')
            .and('have.value', '5000')
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include('316.56')
            })

        cy.get('[id="kas_rent"]')
            .check({ force: true })
            .should('be.checked')
        cy.get('[id="kap_rent"]')
            .should('not.be.checked')
        cy.get('[id="vat_included"]')
            .should('exist')
            .and('be.checked')
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include('308.52')
            })
        cy.get('[id="vat_included"]')
            .uncheck({ force: true })
            .should('not.be.checked')
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include('319.97')
            })
        cy.get('[id="account_type-1"]')
            .check({ force: true })
            .should('be.checked')
        cy.get('[id="account_type-0"]')
            .should('not.be.checked')
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include('319.97')
            })
        cy.get('[id="kap_rent"]')
            .check({ force: true })
            .should('be.checked')
        cy.get('[id="kas_rent"]')
            .should('not.be.checked')
        cy.get('[id="vat_included"]')
            .check({ force: true })
            .should('be.checked')
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include('219.42')
            })
        cy.get('[id="vat_scheduling"]')
            .should('exist')
            .select('Ajatamine kolmele kuule')
            .should('have.value', 'EQUAL3M')
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include('218.12')
            })
        cy.get('[id="vat_scheduling"]')
            .select('Tasumine kolmandal kuul')
            .should('have.value', 'DELAY3M')
        cy.get('.payment').text()
            .then(value => {
                expect(value).to.include('217.46')
            })
    })
})